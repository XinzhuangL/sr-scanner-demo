//
// Created by lixinzhuang1 on 2024/6/5.
//

#ifndef BE_CONNECTOR_H
#define BE_CONNECTOR_H
#include "common/status.h"
#include "table/descriptors.h"
#include "common/chunk.h"
#include <memory>

namespace starrocks {
    namespace vectorized {
        // nothing
    } // namespace vectorized

    namespace connector {

        // DataSource defines how to read from a single scan range.
        // currently scan range is defined by `TScanRange`, I think it's better defined by DataSourceProvider.
        // DataSourceProvider can split a single scan range further into multiple smaller & customized scan ranges.
        // In that way fine granularity can be supported, multiple `DataSource`s can read data from a single scan range.
        class DataSource {
        public:
            virtual ~DataSource() = default;
            virtual Status open() { return Status::OK(); }
            virtual void close() {}
            virtual Status get_next(vectorized::ChunkPtr* chunk) { return Status::OK(); }
            virtual bool skip_predicate() const { return false; }

            // statistics

            // following fields are set by framework
            // 1. runtime profile: ant metrics you want to record
            // 2. predicates: predicates in SQL query(possibly including IN filters generated by broadcast join)
            // 3. runtime filters: local & global runtime filters(or dynamic filters)
            // 4. read limit: for case like `select xxx from table limit 10`.

        protected:
            // _read_limit
            // _conjunct_ctxs
            // _runtime_filters
            // _runtime_profile

            const TupleDescriptor* _tuple_desc = nullptr;
            void _init_chunk(vectorized::ChunkPtr* chunk, size_t n) {
                // todo create a new chunk
                // *chunk = ChunkHelper::new_chunk(*_tuple_desc, n);
            }

        };

        using DataSourcePtr = std::unique_ptr<DataSource>;

        // todo DataSourceProvider

    } // namespace vectorized
} // namespace starrocks


#endif//BE_CONNECTOR_H
